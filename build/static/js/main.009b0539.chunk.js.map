{"version":3,"sources":["services/persons.js","components/Person.js","components/Personlist.js","components/PersonForm.js","components/FilterForm.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","Person","person","deleteContact","name","number","Personlist","persons","onclick","map","key","id","onClick","Input","props","text","value","onChange","PersonForm","onSubmit","text1","value1","onChange1","text2","value2","onChange2","type","FilterForm","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","show","setShow","errorMessage","setErrorMessage","useEffect","console","log","personService","personsFromDb","Notification","message","className","event","target","length","filteredList","filter","startsWith","preventDefault","personObject","personID","window","confirm","put","dataReturnedFromDB","personsAfterUpdate","setTimeout","returnedData","delete","personsAfterDelete","catch","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.009b0539.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"https://lit-shore-36190.herokuapp.com/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n};\n","\nimport React from 'react'\n\nconst Person = ({ person, deleteContact }) => {\n  return (\n    <>\n      <p>{person.name} {person.number}</p>\n    </>\n  )\n}\n\nexport default Person\n\n\n\n","import React from 'react'\nimport Person from './Person'\n\nconst Personlist = ({ persons, onclick }) => {\n  return (\n    <>\n      <ul>\n        {persons.map(person =>\n          <div key={person.id}>\n            <Person person={person} />\n            <button onClick={()=>onclick(person.id, person.name)}>delete</button>\n          </div>\n        )}\n      </ul>\n    </>\n  )\n}\n\nexport default Personlist","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <>\n    <form onSubmit={props.onSubmit}>\n        <Input text={props.text1} value={props.value1} onChange={props.onChange1} />\n        <Input text={props.text2} value={props.value2} onChange={props.onChange2} />\n        <button type=\"submit\">add</button>\n    </form>\n    </>\n  )\n}\n\nconst Input = (props) => {\n    return (\n        <div>\n        {props.text} <input value={props.value}\n          onChange={props.onChange} />\n      </div>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst FilterForm = (props) => {\n    return (\n        <div>\n        {props.text} <input value={props.value}\n          onChange={props.onChange} />\n      </div>\n    )\n}\n\nexport default FilterForm","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport personService from \"./services/persons\";\nimport Personlist from \"./components/Personlist\";\nimport PersonForm from \"./components/PersonForm\";\nimport FilterForm from \"./components/FilterForm\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [show, setShow] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    console.log(\"effect\");\n    personService.getAll().then((personsFromDb) => {\n      setPersons(personsFromDb);\n      setShow(personsFromDb);\n    });\n  }, []);\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null;\n    }\n\n    return <div className=\"error\">{message}</div>;\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n    if (persons.filter((person) => person[\"name\"] === newName).length > 0) {\n      const personID = persons.filter((person) => person[\"name\"] === newName)[0]\n        .id;\n\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the number with a new one?`\n        )\n      ) {\n        axios\n          .put(\n            `https://lit-shore-36190.herokuapp.com/${personID}`,\n            personObject\n          )\n          .then(() => {\n            return axios.get(`https://lit-shore-36190.herokuapp.com/`);\n          })\n          .then((dataReturnedFromDB) => {\n            const personsAfterUpdate = dataReturnedFromDB.data;\n            setPersons(personsAfterUpdate);\n            setShow(personsAfterUpdate);\n            setErrorMessage(`Updated phonenumber for ${newName}`);\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then((returnedData) => console.log(returnedData));\n\n      personService.getAll().then((personsFromDb) => {\n        setPersons(personsFromDb);\n        setShow(personsFromDb);\n        setErrorMessage(`Added ${newName} to the phonebook`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n  const deleteContact = (id, name) => {\n    console.log(\"deletebutton for preson id:\", id);\n    if (window.confirm(`Do you really want to delete ${name}?`)) {\n      axios\n        .delete(`https://lit-shore-36190.herokuapp.com/${id}`)\n        .then(() => {\n          return axios.get(`https://lit-shore-36190.herokuapp.com/`);\n        })\n        .then((dataReturnedFromDB) => {\n          const personsAfterDelete = dataReturnedFromDB.data;\n          setPersons(personsAfterDelete);\n          setShow(personsAfterDelete);\n          setErrorMessage(`Deleted ${name} from the phonebook`);\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setErrorMessage(\n            `Information of ${name} was already removed from the phonebook`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFiltering = (event) => {\n    setNewFilter(event.target.value);\n\n    if (event.target.value.length > 0) {\n      const filteredList = [...persons].filter((person) =>\n        person[\"name\"].startsWith(event.target.value)\n      );\n      setShow(filteredList);\n    }\n    if (event.target.value.length === 0) {\n      setShow(persons);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <FilterForm\n        text={\"filter shown with\"}\n        value={newFilter}\n        onChange={handleFiltering}\n      />\n      <h2>Add a new</h2>\n\n      <PersonForm\n        onSubmit={addPerson}\n        text1={\"name: \"}\n        value1={newName}\n        onChange1={handleNameChange}\n        text2={\"number: \"}\n        value2={newNumber}\n        onChange2={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      <Personlist persons={show} onclick={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}